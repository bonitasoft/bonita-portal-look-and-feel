name: Publish Artefacts

on:
  workflow_dispatch:
    inputs:
      releaseVersion:
        description: base tag version to publish
        default: 1.12.X
        required: true
      pushMavenCentral:
        description: true to push on artifactory
        default: false
        required: true
  repository_dispatch:
    types: [ github-publish ]

jobs:
  publishBinaries:
    name: Build, publish and upload binaries
    runs-on: [self-hosted]
    steps:
      - name: Extract parameter
        id: init
        run: |
          if [ ${{ github.event.action }} == 'github-publish' ]
            then
                echo "##[set-output name=tagVersion;]$(echo ${{ github.event.client_payload.releaseVersion }})"
                echo "##[set-output name=branchToRelease;]$(echo ${{ github.event.client_payload.ref }})"
            else
                echo "##[set-output name=tagVersion;]$(echo ${{ github.event.inputs.releaseVersion }})"
                echo "##[set-output name=branchToRelease;]$(echo ${{ github.ref }})"
                echo "##[set-output name=pushMavenCentral;]$(echo ${{ github.event.inputs.pushMavenCentral == 'true' }})"
            fi
      - uses: actions/checkout@v2
        with:
          ref: ${{ steps.init.outputs.tagVersion }}

      - name: Create maven settings
        if: ${{ success() && ( github.event.action == 'github-publish' || steps.init.outputs.pushMavenCentral == 'true')}}
        uses: whelk-io/maven-settings-xml-action@v4
        with:
          servers: '[{ "id": "releases", "username": "bonita-ci", "password": "${{ secrets.JFROG_AUTH }}" }]'

      - name: Publish artefact
        if: ${{ success() && ( github.event.action == 'github-publish' || steps.init.outputs.pushMavenCentral == 'true')}}
        run: ./mvnw deploy -DskipTests -DaltDeploymentRepository=releases::default::https://bonitasoft.jfrog.io/artifactory/libs-release-local/

      - name: Build binaries
        if: ${{ success() && ( github.event.action != 'github-publish' &&  steps.init.outputs.pushMavenCentral != 'true')}}
        run: ./mvnw -B package --file pom.xml -DskipTests

#      - name: Send message to Slack channel
#        if: ${{ success() && ( github.event.action == 'github-publish' ||  steps.init.outputs.pushMavenCentral == 'true')}}
#        uses: bonitasoft/actions/packages/notify-slack@1.1.0
#        with:
#          CHANNEL_ID: ${{ secrets.SLACK_UID_CHANNEL_ID }}
#          MESSAGE: ":white_check_mark: UI-Designer release ${{ steps.init.outputs.tagVersion }} successfully. You can open a PR on studio repository if needed :mini-gg:"
#          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}