name: Release bonita-portal-look-and-feel

on:
  workflow_dispatch:
    inputs:
      version:
        description: new version to release
        required: true

jobs:
  createGithubRelease:
    name: Create release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: Keeper-Security/ksm-action@v1
        with:
          keeper-secret-config: ${{ secrets.KSM_CONFIG }}
          secrets: |
            ${{ vars.KEEPER_OSSRH_RECORD_ID }}/field/login > env:MAVEN_USERNAME
            ${{ vars.KEEPER_OSSRH_RECORD_ID }}/field/password > env:MAVEN_PASSWORD
            ${{ vars.KEEPER_GPG_ARTIFACT_SIGNING_RECORD_ID }}/custom_field/gpg-private-key > env:GPG_PRIVATE_KEY
            ${{ vars.KEEPER_GPG_ARTIFACT_SIGNING_RECORD_ID }}/field/password > env:MAVEN_GPG_PASSPHRASE

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
          server-id: ossrh # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: MAVEN_USERNAME # env variable for username in deploy
          server-password: MAVEN_PASSWORD # env variable for token in deploy
          gpg-private-key: ${{ env.GPG_PRIVATE_KEY }} # Value of the GPG private key to import
          gpg-passphrase: MAVEN_GPG_PASSPHRASE # env variable for GPG private key passphrase

      - name: Configure Git user
        uses: bonitasoft/git-setup-action@v1
        with:
          keeper-secret-config: ${{ secrets.KSM_CONFIG }} 

      - name: Build Release
        run: ./mvnw --batch-mode release:prepare -DreleaseVersion=${{ github.event.inputs.version }}

      - name: Publish
        run: mvn --batch-mode release:perform

      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.event.inputs.version }}
          name: Release ${{ github.event.inputs.version }}
          generateReleaseNotes: true
